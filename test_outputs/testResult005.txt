Wyvern compiler, version 0.2
Copyright Â© 2019 by Carlos Rivero, ITESM CEM.
This program has absolutely no warranty.

Included in this release:
   * Lexical analysis
   * Syntactic analysis
   * AST construction

ProgramNode 
  FunDefNode {IDENTIFIER, "print_array", @(7, 1)}
    IdListNode 
      IdentifierNode {IDENTIFIER, "a", @(7, 13)}
    VarDefListNode 
      VarDefNode {VAR, "var", @(8, 5)}
        IdListNode 
          IdentifierNode {IDENTIFIER, "first", @(8, 9)}
          IdentifierNode {IDENTIFIER, "i", @(8, 16)}
          IdentifierNode {IDENTIFIER, "n", @(8, 19)}
    StmtListNode 
      AssignmentNode {IDENTIFIER, "first", @(9, 5)}
        TrueNode {TRUE, "true", @(9, 13)}
      FunCallNode {IDENTIFIER, "printc", @(10, 5)}
        ExprListNode 
          CharNode {CHAR_LITERAL, "'['", @(10, 12)}
      AssignmentNode {IDENTIFIER, "i", @(11, 5)}
        IntLiteralNode {INT_LITERAL, "0", @(11, 9)}
      AssignmentNode {IDENTIFIER, "n", @(12, 5)}
        FunCallNode {IDENTIFIER, "size", @(12, 9)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "a", @(12, 14)}
      WhileNode {WHILE, "while", @(13, 5)}
        StmtListNode 
          IfNode 
            IdentifierNode {IDENTIFIER, "first", @(14, 13)}
            StmtListNode 
              AssignmentNode {IDENTIFIER, "first", @(15, 13)}
                IntLiteralNode {FALSE, "false", @(15, 21)}
            ElseIfListNode 
            ElseNode 
              StmtListNode 
                FunCallNode {IDENTIFIER, "prints", @(17, 13)}
                  ExprListNode 
                    StrNode {STRING_LITERAL, "", "", @(17, 20)}
          FunCallNode {IDENTIFIER, "printi", @(19, 9)}
            ExprListNode 
              FunCallNode {IDENTIFIER, "get", @(19, 16)}
                ExprListNode 
                  IdentifierNode {IDENTIFIER, "a", @(19, 20)}
                  IdentifierNode {IDENTIFIER, "i", @(19, 23)}
          IncrementNode {IDENTIFIER, "i", @(20, 9)}
      FunCallNode {IDENTIFIER, "printc", @(22, 5)}
        ExprListNode 
          CharNode {CHAR_LITERAL, "']'", @(22, 12)}
  FunDefNode {IDENTIFIER, "sum_array", @(26, 1)}
    IdListNode 
      IdentifierNode {IDENTIFIER, "a", @(26, 11)}
    VarDefListNode 
      VarDefNode {VAR, "var", @(27, 5)}
        IdListNode 
          IdentifierNode {IDENTIFIER, "sum", @(27, 9)}
          IdentifierNode {IDENTIFIER, "i", @(27, 14)}
          IdentifierNode {IDENTIFIER, "n", @(27, 17)}
    StmtListNode 
      AssignmentNode {IDENTIFIER, "sum", @(28, 5)}
        IntLiteralNode {INT_LITERAL, "0", @(28, 11)}
      AssignmentNode {IDENTIFIER, "i", @(29, 5)}
        IntLiteralNode {INT_LITERAL, "0", @(29, 9)}
      AssignmentNode {IDENTIFIER, "n", @(30, 5)}
        FunCallNode {IDENTIFIER, "size", @(30, 9)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "a", @(30, 14)}
      WhileNode {WHILE, "while", @(31, 5)}
        StmtListNode 
          AssignmentNode {IDENTIFIER, "sum", @(32, 9)}
            ExprAddNode {PLUS, "+", @(32, 19)}
              IdentifierNode {IDENTIFIER, "sum", @(32, 15)}
              FunCallNode {IDENTIFIER, "get", @(32, 21)}
                ExprListNode 
                  IdentifierNode {IDENTIFIER, "a", @(32, 25)}
                  IdentifierNode {IDENTIFIER, "i", @(32, 28)}
          IncrementNode {IDENTIFIER, "i", @(33, 9)}
      ReturnNode {RETURN, "return", @(35, 5)}
        IdentifierNode {IDENTIFIER, "sum", @(35, 12)}
  FunDefNode {IDENTIFIER, "max_array", @(39, 1)}
    IdListNode 
      IdentifierNode {IDENTIFIER, "a", @(39, 11)}
    VarDefListNode 
      VarDefNode {VAR, "var", @(40, 5)}
        IdListNode 
          IdentifierNode {IDENTIFIER, "max", @(40, 9)}
          IdentifierNode {IDENTIFIER, "i", @(40, 14)}
          IdentifierNode {IDENTIFIER, "n", @(40, 17)}
          IdentifierNode {IDENTIFIER, "x", @(40, 20)}
    StmtListNode 
      AssignmentNode {IDENTIFIER, "max", @(41, 5)}
        FunCallNode {IDENTIFIER, "get", @(41, 11)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "a", @(41, 15)}
            IntLiteralNode {INT_LITERAL, "0", @(41, 18)}
      AssignmentNode {IDENTIFIER, "i", @(42, 5)}
        IntLiteralNode {INT_LITERAL, "0", @(42, 9)}
      AssignmentNode {IDENTIFIER, "n", @(43, 5)}
        FunCallNode {IDENTIFIER, "size", @(43, 9)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "a", @(43, 14)}
      WhileNode {WHILE, "while", @(44, 5)}
        StmtListNode 
          AssignmentNode {IDENTIFIER, "x", @(45, 9)}
            FunCallNode {IDENTIFIER, "get", @(45, 13)}
              ExprListNode 
                IdentifierNode {IDENTIFIER, "a", @(45, 17)}
                IdentifierNode {IDENTIFIER, "i", @(45, 20)}
          IfNode 
            ExprRelNode {GREATER, ">", @(46, 15)}
              IdentifierNode {IDENTIFIER, "x", @(46, 13)}
              IdentifierNode {IDENTIFIER, "max", @(46, 17)}
            StmtListNode 
              AssignmentNode {IDENTIFIER, "max", @(47, 13)}
                IdentifierNode {IDENTIFIER, "x", @(47, 19)}
            ElseIfListNode 
            ElseNode 
          IncrementNode {IDENTIFIER, "i", @(49, 9)}
      ReturnNode {RETURN, "return", @(51, 5)}
        IdentifierNode {IDENTIFIER, "max", @(51, 12)}
  FunDefNode {IDENTIFIER, "sort_array", @(56, 1)}
    IdListNode 
      IdentifierNode {IDENTIFIER, "a", @(56, 12)}
    VarDefListNode 
      VarDefNode {VAR, "var", @(57, 5)}
        IdListNode 
          IdentifierNode {IDENTIFIER, "i", @(57, 9)}
          IdentifierNode {IDENTIFIER, "j", @(57, 12)}
          IdentifierNode {IDENTIFIER, "t", @(57, 15)}
          IdentifierNode {IDENTIFIER, "n", @(57, 18)}
          IdentifierNode {IDENTIFIER, "swap", @(57, 21)}
    StmtListNode 
      AssignmentNode {IDENTIFIER, "n", @(58, 5)}
        FunCallNode {IDENTIFIER, "size", @(58, 9)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "a", @(58, 14)}
      AssignmentNode {IDENTIFIER, "i", @(59, 5)}
        IntLiteralNode {INT_LITERAL, "0", @(59, 9)}
      WhileNode {WHILE, "while", @(60, 5)}
        StmtListNode 
          AssignmentNode {IDENTIFIER, "j", @(61, 9)}
            IntLiteralNode {INT_LITERAL, "0", @(61, 13)}
          AssignmentNode {IDENTIFIER, "swap", @(62, 9)}
            IntLiteralNode {FALSE, "false", @(62, 16)}
          WhileNode {WHILE, "while", @(63, 9)}
            StmtListNode 
              IfNode 
                ExprRelNode {GREATER, ">", @(64, 27)}
                  FunCallNode {IDENTIFIER, "get", @(64, 17)}
                    ExprListNode 
                      IdentifierNode {IDENTIFIER, "a", @(64, 21)}
                      IdentifierNode {IDENTIFIER, "j", @(64, 24)}
                  FunCallNode {IDENTIFIER, "get", @(64, 29)}
                    ExprListNode 
                      IdentifierNode {IDENTIFIER, "a", @(64, 33)}
                      ExprAddNode {PLUS, "+", @(64, 38)}
                        IdentifierNode {IDENTIFIER, "j", @(64, 36)}
                        IntLiteralNode {INT_LITERAL, "1", @(64, 40)}
                StmtListNode 
                  AssignmentNode {IDENTIFIER, "t", @(65, 17)}
                    FunCallNode {IDENTIFIER, "get", @(65, 21)}
                      ExprListNode 
                        IdentifierNode {IDENTIFIER, "a", @(65, 25)}
                        IdentifierNode {IDENTIFIER, "j", @(65, 28)}
                  FunCallNode {IDENTIFIER, "set", @(66, 17)}
                    ExprListNode 
                      IdentifierNode {IDENTIFIER, "a", @(66, 21)}
                      IdentifierNode {IDENTIFIER, "j", @(66, 24)}
                      FunCallNode {IDENTIFIER, "get", @(66, 27)}
                        ExprListNode 
                          IdentifierNode {IDENTIFIER, "a", @(66, 31)}
                          ExprAddNode {PLUS, "+", @(66, 36)}
                            IdentifierNode {IDENTIFIER, "j", @(66, 34)}
                            IntLiteralNode {INT_LITERAL, "1", @(66, 38)}
                  FunCallNode {IDENTIFIER, "set", @(67, 17)}
                    ExprListNode 
                      IdentifierNode {IDENTIFIER, "a", @(67, 21)}
                      ExprAddNode {PLUS, "+", @(67, 26)}
                        IdentifierNode {IDENTIFIER, "j", @(67, 24)}
                        IntLiteralNode {INT_LITERAL, "1", @(67, 28)}
                      IdentifierNode {IDENTIFIER, "t", @(67, 31)}
                  AssignmentNode {IDENTIFIER, "swap", @(68, 17)}
                    TrueNode {TRUE, "true", @(68, 24)}
                ElseIfListNode 
                ElseNode 
              IncrementNode {IDENTIFIER, "j", @(70, 13)}
          IfNode 
            ExprUnaryNode {NOT, "!", @(72, 13)}
              IdentifierNode {IDENTIFIER, "swap", @(72, 14)}
            StmtListNode 
              StmtNode {BREAK, "break", @(73, 13)}
            ElseIfListNode 
            ElseNode 
          IncrementNode {IDENTIFIER, "i", @(75, 9)}
  FunDefNode {IDENTIFIER, "main", @(79, 1)}
    IdListNode 
    VarDefListNode 
      VarDefNode {VAR, "var", @(80, 5)}
        IdListNode 
          IdentifierNode {IDENTIFIER, "array", @(80, 9)}
          IdentifierNode {IDENTIFIER, "sum", @(80, 16)}
          IdentifierNode {IDENTIFIER, "max", @(80, 21)}
    StmtListNode 
      AssignmentNode {IDENTIFIER, "array", @(81, 5)}
        ArrNode 
          ExprListNode 
            IntLiteralNode {INT_LITERAL, "73", @(81, 14)}
            IntLiteralNode {INT_LITERAL, "77", @(81, 18)}
            IntLiteralNode {INT_LITERAL, "56", @(81, 22)}
            IntLiteralNode {INT_LITERAL, "10", @(81, 26)}
            IntLiteralNode {INT_LITERAL, "14", @(81, 30)}
            IntLiteralNode {INT_LITERAL, "54", @(82, 14)}
            IntLiteralNode {INT_LITERAL, "75", @(82, 18)}
            IntLiteralNode {INT_LITERAL, "62", @(82, 22)}
            IntLiteralNode {INT_LITERAL, "71", @(82, 26)}
            IntLiteralNode {INT_LITERAL, "10", @(82, 30)}
            IntLiteralNode {INT_LITERAL, "3", @(83, 15)}
            IntLiteralNode {INT_LITERAL, "71", @(83, 18)}
            IntLiteralNode {INT_LITERAL, "16", @(83, 22)}
            IntLiteralNode {INT_LITERAL, "49", @(83, 26)}
            IntLiteralNode {INT_LITERAL, "66", @(83, 30)}
            IntLiteralNode {INT_LITERAL, "91", @(84, 14)}
            IntLiteralNode {INT_LITERAL, "69", @(84, 18)}
            IntLiteralNode {INT_LITERAL, "62", @(84, 22)}
            IntLiteralNode {INT_LITERAL, "25", @(84, 26)}
            IntLiteralNode {INT_LITERAL, "65", @(84, 30)}
      FunCallNode {IDENTIFIER, "prints", @(85, 5)}
        ExprListNode 
          StrNode {STRING_LITERAL, ""Original array: "", @(85, 12)}
      FunCallNode {IDENTIFIER, "print_array", @(86, 5)}
        ExprListNode 
          IdentifierNode {IDENTIFIER, "array", @(86, 17)}
      FunCallNode {IDENTIFIER, "println", @(87, 5)}
        ExprListNode 
      AssignmentNode {IDENTIFIER, "sum", @(88, 5)}
        FunCallNode {IDENTIFIER, "sum_array", @(88, 11)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "array", @(88, 21)}
      AssignmentNode {IDENTIFIER, "max", @(89, 5)}
        FunCallNode {IDENTIFIER, "max_array", @(89, 11)}
          ExprListNode 
            IdentifierNode {IDENTIFIER, "array", @(89, 21)}
      FunCallNode {IDENTIFIER, "prints", @(90, 5)}
        ExprListNode 
          StrNode {STRING_LITERAL, ""Sum of array:   "", @(90, 12)}
      FunCallNode {IDENTIFIER, "printi", @(91, 5)}
        ExprListNode 
          IdentifierNode {IDENTIFIER, "sum", @(91, 12)}
      FunCallNode {IDENTIFIER, "println", @(92, 5)}
        ExprListNode 
      FunCallNode {IDENTIFIER, "prints", @(93, 5)}
        ExprListNode 
          StrNode {STRING_LITERAL, ""Max of array:   "", @(93, 12)}
      FunCallNode {IDENTIFIER, "printi", @(94, 5)}
        ExprListNode 
          IdentifierNode {IDENTIFIER, "max", @(94, 12)}
      FunCallNode {IDENTIFIER, "println", @(95, 5)}
        ExprListNode 
      FunCallNode {IDENTIFIER, "sort_array", @(96, 5)}
        ExprListNode 
          IdentifierNode {IDENTIFIER, "array", @(96, 16)}
      FunCallNode {IDENTIFIER, "prints", @(97, 5)}
        ExprListNode 
          StrNode {STRING_LITERAL, ""Sorted array:   "", @(97, 12)}
      FunCallNode {IDENTIFIER, "print_array", @(98, 5)}
        ExprListNode 
          IdentifierNode {IDENTIFIER, "array", @(98, 17)}
      FunCallNode {IDENTIFIER, "println", @(99, 5)}
        ExprListNode 
